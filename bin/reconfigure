#!/usr/bin/env bash
#*-----------------------------------------------------------------------------
__require__ \
    'helpers/shell/output.sh' \
    'helpers/shell/utility.sh' \
;
#*-----------------------------------------------------------------------------
set_interactive OFF;

#*-----------------------------------------------------------------------------
setup_dir="$(__script_base_dir__)/setup-scripts";

_list_setup_scripts() { find "$setup_dir" "$setup_dir/$(uname -s)" -maxdepth 1 -type f -print0; };
_get_setup_script() {
  matches=("$(find "$setup_dir" "$setup_dir/$(uname -s)" -maxdepth 1 -type f -name "$1")");
  if [[ "${#matches[@]}" -gt 1 ]]; then
    show_error "Found more than one match for: $1.";
    for match in "${matches[@]}"; do show_error "  - $match"; done;
    show_error "Running first entry: ${matches[0]}";
  fi
  if [[ "${#matches[@]}" -lt 1 ]]; then
    show_error "No matching scripts found for input: $1";
    return 1;
  fi

  echo -n "${matches[0]}";
}

main() {
    if [[ "$#" -eq 0       ]] \
    || [[ "$1" == "--help" ]]; then
        help;
        return 0;
    fi

    local setup_items=();

    if [[ "$#" -eq 1      ]] \
    && [[ "$1" == '--all' ]]; then
        while IFS= read -r -d '' path
        do
            file="$(basename "$path")";
            setup_items+=("${file%.sh}");
        done < <(list_setup_scripts)
    else
        setup_items+=("$@");
    fi


    for setup_item in "${setup_items[@]}"; do
        prefix "($setup_item)";
        run_setup "$setup_item";
        prefix_reset;
    done

    show_msg "$(style bold)DONE$(style normal)";
}


help() {
    show_msg;
    show_msg "$(style bold)Usage:$(style normal) $(__current_script_filename__) item1 [item2] [item3] ...";
    show_msg "$(style bold)Usage:$(style normal) $(__current_script_filename__) --all";
    show_msg;
    show_msg "$(style bold)Available setup items:$(style normal)";

    while IFS= read -r -d '' f
    do
        item="$(basename "${f%.sh}")";
        indent 4;
            show_msg "- $item";
        indent -4;
    done < <(_list_setup_scripts);

    show_msg;
}


run_setup() {
    # script_file="$setup_dir/$1.sh";
    script_file="$(_get_setup_script "$1")";

    show_msg "$(style bold)Setting up $setup_item...$(style normal)";

    if ! [[ -f "$script_file" ]]; then
        show_error "Could not find setup script: $script_file";
        return 1;
    fi

    indent 2
        show_msg "$(style green)> $script_file$(style normal)";
        $script_file;
    indent -2;
}

#*-----------------------------------------------------------------------------

main "$@";
